# AZIL - Application web de r√©servations de location saisonni√®re

‚ö†Ô∏è _Ce projet a √©t√© r√©alis√© dans le cadre d'un exercice annuel de d√©veloppement projet (architectures web des syst√®mes d'informations) du MASTER MIAGE √† Amiens. Il s'agit d'une simulation visant √† mettre en pratique les connaissances acquises dans le domaine du d√©veloppement logiciel, de la gestion de projet et de l'analyse des besoins des utilisateurs. L'objectif principal de cet exercice est de permettre aux √©tudiants de d√©velopper leurs comp√©tences techniques et de renforcer leur compr√©hension des principes de d√©veloppement logiciel tout en travaillant sur un cas concret et r√©aliste. Aucune r√©mun√©ration ou mise en publication n'est √† pr√©voir, ce projet √©tant exclusivement destin√© √† des fins p√©dagogiques._ ‚ö†Ô∏è

üöß Cette **version 1** du projet comprend un ensemble restreint de fonctionnalit√©s.

## Description du projet üìÅ

### Sujet de projet

L‚Äôobjectif est de d√©velopper un site Web permettant au personnel de l'universit√© de g√©rer le mat√©riel : meubles, t√©l√©phones fixes, imprimantes, etc. Le mat√©riel peut √™tre stock√© ou utilis√©. S'il est stock√©, il faut savoir dans quelle salle. S'il est utilis√©, il faut aussi savoir dans quelle salle, et √† qui le mat√©riel a √©t√© confi√©. Le mat√©riel peut √™tre confi√© soit √† un organisme (par exemple le d√©partement informatique), soit √† un membre du personnel. Les utilisateurs (organismes ou membres individuels) doivent pouvoir consulter la liste des mat√©riels disponibles, par type. Ils doivent pouvoir demander √† se faire attribuer du mat√©riel.

Le site doit au minimum offrir les fonctionnalit√©s suivantes :

-   L‚Äôadministrateur peut ajouter/supprimer un compte utilisateur (organisme ou membre individuel). L‚Äôadministrateur et les utilisateurs peuvent modifier leur compte (mot de passe, etc).
-   Un utilisateur peut consulter les mat√©riels disponibles, par type, consulter les mat√©riels qui lui ont √©t√© attribu√©s, demander √† se faire attribuer un mat√©riel, demander √† rendre un mat√©riel.
-   L'administrateur peut accepter une demande d'attribution, ou le retour d'un mat√©riel. Il peut aussi ajouter un mat√©riel dans la base, ou en retirer un.

### Partie optionelle

On peut d√©velopper un composant pour que l‚Äôadministrateur puisse avoir un tableau de bord du mat√©riel (nombre de mat√©riels par type, mat√©riels entr√©s ou sortis depuis une certaine date, etc). On peut ajouter des dates de renouvellement sur les mat√©riels (par exemple une imprimante doit √™tre renouvel√©e tous les 10 ans), avec des alertes √† l‚Äôadministrateur. On peut √©galement ajouter des d√©lais de retour pour certains mat√©riels (par exemple une multiprise doit √™tre ramen√©e dans la journ√©e), avec l√† aussi des alertes. On peut ajouter des r√®gles sur les utilisateurs qui les autorisent √† se faire attribuer ou pas certains mat√©riels (par exemple seule une institution peut emprunter un meuble, pas un individu).

## Installation üì•

Voici les instructions d'installation de l'environnement projet :

### Pr√©requis üö®

Avant de commencer, assurez-vous d'avoir install√© les √©l√©ments suivants sur votre syst√®me :
üöß _Ce guide est destin√© avant tout aux utilisateurs de **Windows**_

-   [Github Desktop](https://central.github.com/deployments/desktop/desktop/latest/win32)
-   [Node JS & NPM](https://phoenixnap.com/kb/install-node-js-npm-on-windows)
-   [Docker Desktop](https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&utm_medium=webreferral&utm_campaign=dd-smartbutton&utm_location=module)
-   [Visual Studio Code](https://code.visualstudio.com/download)

### Instructions d'installation üìã

Ce projet demande de faire fonctionner en parall√®le :
-   Le frontend => `~/frontend`
-   Le Backend => `~/backend`
-   La BDD => `~/backend`

1. **Configurer le fichier .env**

    Le projet se base sur un fichier `.env` plac√© √† la racine du dossier `~/backend`. Ce fichier est √† cr√©er selon le mod√®le donn√© par le fichier `.env.lock`.

    - Copi√© le fichier `.env.lock` √† la racine du dossier `~/backend` vers un fichier nomm√© `.env`.
    - Ouvrez dans √©diteur de texte le fichier ainsi cr√©√©.
    - Modifiez les valeurs entre `" "` selon vos pr√©f√©rences.

    ```
        DB_NAME="your_db_name"
        DB_HOST=localhost
        DB_PORT=27018

        DB_USER_NAME="your_db_user_name"
        DB_USER_PASSWORD="your_db_user_password"

        DB_ROOT_NAME="your_db_root_name"
        DB_ROOT_USER_NAME="your_db_root_user_name"
        DB_ROOT_PASSWORD="your_db_root_password"

        SECRET_KEY="your_secret_key"
    ```

2. **Configurer Docker Desktop :**

    - Ouvrez Docker Desktop et connectez-vous ou cr√©ez un compte Docker si n√©cessaire.
    - Cochez l'int√©gration WSL Ubuntu dans les param√®tres de Docker.
    - Minimisez la fen√™tre.

3. **Configurer Github Desktop :**

    - Ouvrez Github Desktop et connectez-vous ou cr√©ez un compte Git.
    - Clonez le r√©pertoire Git sur votre machine virtuelle Ubuntu WSL √† l'emplacement de votre choix.
    - Ouvrez le r√©pertoire clon√© avec Visual Studio Code.

4. **Ex√©cuter les commandes depuis un terminal :**
    üöß _Le terminal utilis√© doit permettre l'ex√©cution des commandes `npm`_
    - Ouvrez un terminal √† la racine du projet git de mani√®re √† avoir ceci :
    ```
    frontend
    backend
    ...
    ```
    - Ex√©cutez successivement les commandes suivantes : 
    ```
    cd backend
    npm install
    docker-compose up -d
    cd ../frontend
    npm install
    ```

### Lancement du projet üì§

üöß _Les prochaines √©tapes implique d'ouvrir 2 terminaux, un pour le frontend et l'autre pour le backend._

1. **Terminal du Frontend**
    Placer-vous √† la racine du dossier `~/frontend` et ex√©cutez
    ```
    npm start
    ```
2. **Terminal du Backend**
    Placer-vous √† la racine du dossier `~/backend` et ex√©cutez
    ```
    npm start
    ```

‚ö†Ô∏è _Ne fermez pas les terminaux tant que vous testez l'application._ ‚ö†Ô∏è

### Arr√™t du projet üö´

Pour arr√™ter le projet, utilisez la commande **CTRL + C** dans chacun des terminaux. Puis depuis Docker Desktop stopp√© le conteneur actif li√© √† l'application.


### Acc√®s au site web üåê

Vous n'avez qu'√† saisir dans votre navigateur web `localhosh:4200` pour acc√©der √† l'application cot√© client sinon l'api du serveur est accessible en `localhosh:5000/api/` suivi de la route voulue.

Assurez-vous de suivre ces instructions dans l'ordre pour une installation et une ex√©cution correctes du projet.

---

_Ce Readme a √©t√© r√©dig√© par Ma√´l RHUIN et Reda ES SALHI._
